name: Test(Linux-py3.7-x64)

on: [push]

jobs:
  test:
    strategy:
      matrix:
        envinfo:
          - { name: 'linux-3.6-x64', os: ubuntu-latest, python-version: 3.6.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.7-x64', os: ubuntu-latest, python-version: 3.7.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.8-x64', os: ubuntu-latest, python-version: 3.8.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'windows-3.6-x64', os: windows-latest, python-version: 3.6.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.6-x86', os: windows-latest, python-version: 3.6.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.7-x64', os: windows-latest, python-version: 3.7.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.7-x86', os: windows-latest, python-version: 3.7.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.8-x64', os: windows-latest, python-version: 3.8.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.8-x86', os: windows-latest, python-version: 3.8.x, python-arch: x86, TZ: 'CST-8' }

    env:
        PYTHONIOENCODING: "utf-8"
        PYTHONHASHSEED: 32
        TZ: ${{ matrix.envinfo.TZ }}
        SUCCESS_FLAG: ".success_flag.log"
        TESTLOGPATH: "./log_archive/"
        TESTLOGNAME: ${{ matrix.envinfo.name }}

    runs-on: ${{ matrix.envinfo.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: shinnytech/tqsdk-python-private
        token: ${{ secrets.TQSDKCI }}

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Package web
      run: |
        cd ./web/
        yarn install --frozen-lockfile
        yarn run build
      env:
        CI: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.envinfo.python-version}}
        architecture: ${{matrix.envinfo.python-arch}}
        
    - name: Install dependencies
      run: |
        git lfs install
        git lfs pull
        python -m pip install --upgrade pip wheel setuptools pytest pytest-rerunfailures memory_profiler
        python -m pip install -r requirements.txt

    - name: Upload log to artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.TESTLOGNAME }}
        path: ${{ env.TESTLOGPATH }}

    - name: Upload success flag file
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: success_flag
        path: ${{ matrix.envinfo.name }}.txt

  summary:
    name: summary CI result
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download ci result for test
        uses: actions/download-artifact@v1
        with:
          name: success_flag
          
      - name: format the final result
        shell: bash
        run: |
          ls -lrt