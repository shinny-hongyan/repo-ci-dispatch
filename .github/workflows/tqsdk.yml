name: Test(Linux-py3.7-x64)

on: [push]

jobs:
  test:
    strategy:
      matrix:
        envinfo:
          - { name: 'linux-3.6-x64', os: ubuntu-latest, python-version: 3.6.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.7-x64', os: ubuntu-latest, python-version: 3.7.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.8-x64', os: ubuntu-latest, python-version: 3.8.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'windows-3.6-x64', os: windows-latest, python-version: 3.6.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.6-x86', os: windows-latest, python-version: 3.6.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.7-x64', os: windows-latest, python-version: 3.7.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.7-x86', os: windows-latest, python-version: 3.7.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.8-x64', os: windows-latest, python-version: 3.8.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.8-x86', os: windows-latest, python-version: 3.8.x, python-arch: x86, TZ: 'CST-8' }

    env:
        PYTHONIOENCODING: "utf-8"
        PYTHONHASHSEED: 32
        TZ: ${{ matrix.envinfo.TZ }}
        SUCCESS_FLAG: ".success_flag.log"
        TESTLOGPATH: "./log_archive/"
        TESTLOGNAME: ${{ matrix.envinfo.name }}

    runs-on: ${{ matrix.envinfo.os }}

    steps:
    - name: Setup Node.js 12.x
      shell: bash
        run: |
          touch ${{ matrix.envinfo.name }}.txt


    - name: Upload success flag file
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: success_flag
        path: ${{ matrix.envinfo.name }}.txt

  summary:
    name: summary CI result
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download ci result for test
        uses: actions/download-artifact@v1
        with:
          name: success_flag
          
      - name: format the final result
        shell: bash
        run: |
          ls -lrt